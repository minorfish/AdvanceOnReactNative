/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <assert.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "v8.h"
#include "libplatform/libplatform.h"
/* Header for class HelloJNI */

#ifndef _Included_HelloJNI
#define _Included_HelloJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     HelloJNI
 * Method:    load
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_HelloJNI_load
  (JNIEnv *, jobject, jstring);

/*
 * Class:     HelloJNI
 * Method:    sendOrder
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_HelloJNI_sendOrder
  (JNIEnv *, jobject, jstring);

void Load(const v8::Local<v8::String> source);

v8::Local<v8::Context> CreateShellContext(v8::Isolate* isolate);
const char* LocalValue2Str(v8::Isolate* isolate, v8::Local<v8::Value> localStr);
void ReportException(v8::Isolate* isolate, v8::TryCatch* handler);
const char* ToCString(const v8::String::Utf8Value& value);

#ifdef __cplusplus
}
#endif
#endif
